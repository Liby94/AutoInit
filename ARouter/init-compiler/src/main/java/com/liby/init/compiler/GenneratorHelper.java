package com.liby.init.compiler;

import com.squareup.javapoet.ClassName;
import com.squareup.javapoet.FieldSpec;
import com.squareup.javapoet.JavaFile;
import com.squareup.javapoet.MethodSpec;
import com.squareup.javapoet.TypeName;
import com.squareup.javapoet.TypeSpec;

import javax.lang.model.element.Modifier;

/**
 * @author: LiBing
 * @date: 2021_06_02
 * @desc:
 */
public class GenneratorHelper {

    public static void main(String[] args) {
        String packageName = "com.liby.test";
        String groupFile = "ThirdAutoService1";
        JavaFile javaFile = getGeneratorJavaFile(groupFile, packageName);
        System.out.println(javaFile);
        /*FieldSpec init = FieldSpec.builder(ClassName.get(packageName,groupFile), "init")
                .addModifiers(Modifier.PUBLIC,Modifier.FINAL)
                .initializer("new $L()", groupFile)
                .build();

        MethodSpec attachBaseContext = MethodSpec.methodBuilder("attachBaseContext")
                .addParameter(ClassName.get("android.content","Context"),"context")
                .addModifiers(Modifier.PUBLIC)
                .addStatement("init.attachBaseContext($N)","context")
                .build();

        MethodSpec onCreate = MethodSpec.methodBuilder("onCreate")
                .addModifiers(Modifier.PUBLIC)
                .addStatement("init.onCreate()")
                .build();


        MethodSpec onTrimMemory = MethodSpec.methodBuilder("onTrimMemory")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(int.class,"i")
                .addStatement("init.onTrimMemory($N)","i")
                .build();

        MethodSpec onConfigurationChanged = MethodSpec.methodBuilder("onConfigurationChanged")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.content.res", "Configuration"), "configuration")
                .addStatement("init.onConfigurationChanged($N)","configuration")
                .build();

        MethodSpec registerComponentCallbacks = MethodSpec.methodBuilder("registerComponentCallbacks")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.content","ComponentCallbacks"),"componentCallbacks")
                .addStatement("init.registerComponentCallbacks($N)","componentCallbacks")
                .build();

        MethodSpec unregisterComponentCallbacks = MethodSpec.methodBuilder("unregisterComponentCallbacks")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.content","ComponentCallbacks"),"componentCallbacks")
                .addStatement("init.unregisterComponentCallbacks($N)","componentCallbacks")
                .build();

        MethodSpec registerActivityLifecycleCallbacks = MethodSpec.methodBuilder("registerActivityLifecycleCallbacks")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.app.Application","ActivityLifecycleCallbacks"),"activityLifecycleCallbacks")
                .addStatement("init.registerActivityLifecycleCallbacks($N)","activityLifecycleCallbacks")
                .build();

        MethodSpec unregisterActivityLifecycleCallbacks = MethodSpec.methodBuilder("unregisterActivityLifecycleCallbacks")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.app.Application","ActivityLifecycleCallbacks"),"activityLifecycleCallbacks")
                .addStatement("init.unregisterActivityLifecycleCallbacks($N)","activityLifecycleCallbacks")
                .build();


        JavaFile javaFile = JavaFile.builder(packageName,
                TypeSpec.classBuilder(groupFile)
                        .addJavadoc("DO NOT EDIT THIS FILE!!! IT WAS GENERATED BY AutoInit.")
                        .addModifiers(Modifier.PUBLIC)
                        .addField(init)
                        .addMethod(attachBaseContext)
                        .addMethod(onCreate)
                        .addMethod(onTrimMemory)
                        .addMethod(onConfigurationChanged)
                        .addMethod(registerComponentCallbacks)
                        .addMethod(unregisterComponentCallbacks)
                        .addMethod(registerActivityLifecycleCallbacks)
                        .addMethod(unregisterActivityLifecycleCallbacks)
                        .build()
        ).build();
        System.out.println(javaFile);*/
    }

    public static JavaFile getGeneratorJavaFile(String className, String packageName) {
        FieldSpec init = FieldSpec.builder(ClassName.get(packageName,className), "init")
                .addModifiers(Modifier.PUBLIC,Modifier.FINAL)
                .initializer("new $L()", className)
                .build();

        MethodSpec attachBaseContext = MethodSpec.methodBuilder("attachBaseContext")
                .addParameter(ClassName.get("android.content","Context"),"context")
                .addModifiers(Modifier.PUBLIC)
                .addStatement("init.attachBaseContext($N)","context")
                .build();

        MethodSpec onCreate = MethodSpec.methodBuilder("onCreate")
                .addModifiers(Modifier.PUBLIC)
                .addStatement("init.onCreate()")
                .build();


        MethodSpec onTrimMemory = MethodSpec.methodBuilder("onTrimMemory")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(int.class,"i")
                .addStatement("init.onTrimMemory($N)","i")
                .build();

        MethodSpec onConfigurationChanged = MethodSpec.methodBuilder("onConfigurationChanged")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.content.res", "Configuration"), "configuration")
                .addStatement("init.onConfigurationChanged($N)","configuration")
                .build();

        MethodSpec registerComponentCallbacks = MethodSpec.methodBuilder("registerComponentCallbacks")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.content","ComponentCallbacks"),"componentCallbacks")
                .addStatement("init.registerComponentCallbacks($N)","componentCallbacks")
                .build();

        MethodSpec unregisterComponentCallbacks = MethodSpec.methodBuilder("unregisterComponentCallbacks")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.content","ComponentCallbacks"),"componentCallbacks")
                .addStatement("init.unregisterComponentCallbacks($N)","componentCallbacks")
                .build();

        MethodSpec registerActivityLifecycleCallbacks = MethodSpec.methodBuilder("registerActivityLifecycleCallbacks")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.app.Application","ActivityLifecycleCallbacks"),"activityLifecycleCallbacks")
                .addStatement("init.registerActivityLifecycleCallbacks($N)","activityLifecycleCallbacks")
                .build();

        MethodSpec unregisterActivityLifecycleCallbacks = MethodSpec.methodBuilder("unregisterActivityLifecycleCallbacks")
                .addModifiers(Modifier.PUBLIC)
                .addParameter(ClassName.get("android.app.Application","ActivityLifecycleCallbacks"),"activityLifecycleCallbacks")
                .addStatement("init.unregisterActivityLifecycleCallbacks($N)","activityLifecycleCallbacks")
                .build();

        JavaFile javaFile = JavaFile.builder("com.liby.autoinit.init",
                TypeSpec.classBuilder("AutoInit$" + className)
                        .addJavadoc("DO NOT EDIT THIS FILE!!! IT WAS GENERATED BY AutoInit.")
                        .addModifiers(Modifier.PUBLIC)
                        .addField(init)
                        .addMethod(attachBaseContext)
                        .addMethod(onCreate)
                        .addMethod(onTrimMemory)
                        .addMethod(onConfigurationChanged)
                        .addMethod(registerComponentCallbacks)
                        .addMethod(unregisterComponentCallbacks)
                        .addMethod(registerActivityLifecycleCallbacks)
                        .addMethod(unregisterActivityLifecycleCallbacks)
                        .build()
        ).build();
        return javaFile;
    }

}
